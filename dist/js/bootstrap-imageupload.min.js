if ("undefined" == typeof jQuery) throw new Error("bootstrap-imageupload's JavaScript requires jQuery."); !function (e) { "use strict"; function i(i) { h = e.extend({}, e.fn.imageupload.defaultOptions, i), b = e.extend({}, e.fn.imageupload.language, i); var n = this, t = n.find(".file-tab"), r = n.find(".panel-heading .btn:eq(0)"), o = t.find('input[type="file"]'), s = t.find(".btn:eq(1)"), l = n.find(".url-tab"), d = n.find(".panel-heading .btn:eq(1)"), v = l.find(".btn:eq(0)"), F = l.find(".btn:eq(1)"); u(t), g(l), f(t), a.call(n), r.off(), o.off(), s.off(), d.off(), v.off(), F.off(), r.on("click", function () { e(this).blur(), f(t) }), o.on("change", function () { e(this).blur(), p(t) }), s.on("click", function () { e(this).blur(), u(t) }), d.on("click", function () { e(this).blur(), c(l) }), v.on("click", function () { e(this).blur(), m(l) }), F.on("click", function () { e(this).blur(), g(l) }) } function n() { this.addClass("imageupload-disabled") } function a() { this.removeClass("imageupload-disabled") } function t() { var e = this; i.call(e, h) } function r(e) { var i = []; return i.push('<div class="alert alert-danger alert-dismissible">'), i.push('<button type="button" class="close" data-dismiss="alert">'), i.push("<span>&times;</span>"), i.push("</button>" + e), i.push("</div>"), i.join("") } function o(e) { return '<img src="' + e + '" alt="' + b.AltImage + '" class="thumbnail" style="max-width: ' + h.maxWidth + "px; max-height: " + h.maxHeight + 'px">' } function s(e) { return e.substr(e.lastIndexOf(".") + 1).toLowerCase() } function l(i, n) { if (i.size / 1024 > h.maxFileSizeKb) n(!1, b.errorMessageFileSize + h.maxFileSizeKb + "kB)."); else { var a = s(i.name); e.inArray(a, h.allowedFormats) > -1 ? n(!0, b.successMessageFileFormat) : n(!1, b.errorMessageFileFormat) } } function d(i, n) { var a = null, t = !1, r = new Image; r.onload = function () { if (!t) { window.clearTimeout(a); var r = i; -1 !== r.indexOf("?") && (r = r.split("?")[0].split("#")[0]); var o = s(r); e.inArray(o, h.allowedFormats) > -1 ? n(!0, b.successMessageURLFormat) : n(!1, b.errorMessageFileFormat) } }, r.onerror = function () { t || (window.clearTimeout(a), n(!1, b.errorMessageFileNotFound)) }, r.src = i, a = window.setTimeout(function () { t = !0, r.src = "???", n(!1, b.errorMessageFileTimeOut) }, 3e3) } function f(e) { var i = e.closest(".imageupload"), n = i.find(".panel-heading .btn:eq(0)"); if (!n.hasClass("active")) { var a = i.find(".url-tab"); i.find(".panel-heading .btn:eq(1)").removeClass("active"), n.addClass("active"), a.hide(), e.show(), g(a) } } function u(e) { e.find(".alert").remove(), e.find("img").remove(), e.find(".btn span").text(b.browseButton), e.find(".btn:eq(1)").hide(), e.find("input").val("") } function p(e) { var i = e.find(".btn:eq(0)"), n = e.find(".btn:eq(1)"), a = i.find("input"); if (e.find(".alert").remove(), e.find("img").remove(), i.find("span").text(b.browseButton), n.hide(), a[0].files && a[0].files[0]) { i.prop("disabled", !0); var t = a[0].files[0]; l(t, function (s, l) { if (s) { var d = new FileReader; d.onload = function (a) { e.prepend(o(a.target.result)), i.find("span").text(b.changeButton), n.css("display", "inline-block") }, d.onerror = function () { e.prepend(r(b.errorMessageLoadingImage)), a.val("") }, d.readAsDataURL(t) } else e.prepend(r(l)), i.find("span").text(b.browseButton), a.val(""); i.prop("disabled", !1) }) } } function c(e) { var i = e.closest(".imageupload"), n = i.find(".panel-heading .btn:eq(1)"); if (!n.hasClass("active")) { var a = i.find(".file-tab"); i.find(".panel-heading .btn:eq(0)").removeClass("active"), n.addClass("active"), a.hide(), e.show(), u(a) } } function g(e) { e.find(".alert").remove(), e.find("img").remove(), e.find(".btn:eq(1)").hide(), e.find("input").val("") } function m(i) { var n = i.find('input[type="text"]'), a = i.find(".btn:eq(0)"), t = i.find(".btn:eq(1)"); i.find(".alert").remove(), i.find("img").remove(), t.hide(); var s = n.val(); s ? (n.prop("disabled", !0), a.prop("disabled", !0), d(s, function (l, d) { l ? (i.find('input[type="hidden"]').val(s), e(o(s)).insertAfter(a.closest(".input-group")), t.css("display", "inline-block")) : i.prepend(r(d)), n.prop("disabled", !1), a.prop("disabled", !1) })) : i.prepend(r(b.errorMessageEnterURL)) } var h = {}, b = {}, v = { init: i, disable: n, enable: a, reset: t }; e.fn.imageupload = function (i) { var n = arguments; return this.filter("div").each(function () { if (v[i]) v[i].apply(e(this), Array.prototype.slice.call(n, 1)); else { if ("object" != typeof i && i) throw new Error(b.MethodError.replace("%methodOrOptions%", i)); v.init.apply(e(this), n) } }) }, e.fn.imageupload.language = { MethodError: "Method %methodOrOptions% is not defined for imageupload.", AltImage: "Image preview", changeButton: "Change", browseButton: "Browse", errorMessageFileSize: "File is too large (max ", errorMessageFileFormat: "File type is not allowed.", successMessageFileFormat: "Image file is valid.", successMessageURLFormat: "Image URL is valid.", errorMessageFileNotFound: "Image could not be found.", errorMessageFileTimeOut: "Loading image timed out.", errorMessageLoadingImage: "Error loading image file.", errorMessageEnterURL: "Please enter an image URL." }, e.fn.imageupload.defaultOptions = { allowedFormats: ["jpg", "jpeg", "png", "gif"], maxWidth: 250, maxHeight: 250, maxFileSizeKb: 2048 } }(jQuery);